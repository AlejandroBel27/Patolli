/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrmGUI;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JLabel;

/**
 *
 * @author equipo 1
 */
public class frmTablero extends javax.swing.JFrame {

    ArrayList<JLabel> listaCasillas;

    /**
     * Creates new form frmTablero
     */
    public frmTablero() {
        initComponents();
        setLocationRelativeTo(null);
        dibujarCasillas(14);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTablero = new javax.swing.JPanel();
        pnlControles = new javax.swing.JPanel();
        btnTirar = new javax.swing.JButton();
        lblTirada = new javax.swing.JLabel();
        btnRetirarse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout pnlTableroLayout = new javax.swing.GroupLayout(pnlTablero);
        pnlTablero.setLayout(pnlTableroLayout);
        pnlTableroLayout.setHorizontalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlTableroLayout.setVerticalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );

        btnTirar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTirar.setText("Tirar");
        btnTirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTirarActionPerformed(evt);
            }
        });

        lblTirada.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTirada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnRetirarse.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRetirarse.setText("Retirarse");
        btnRetirarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlesLayout = new javax.swing.GroupLayout(pnlControles);
        pnlControles.setLayout(pnlControlesLayout);
        pnlControlesLayout.setHorizontalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlesLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btnTirar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTirada, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRetirarse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        pnlControlesLayout.setVerticalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addGroup(pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTirada, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTirar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetirarse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTirarActionPerformed
        Random random = new Random();
        String tirada = "";
        for (int i = 0; i < 5; i++) {
            if (i > 0) tirada += "-";
            tirada += random.nextBoolean() ? "I" : "O";
        }
        lblTirada.setText(tirada);
    }//GEN-LAST:event_btnTirarActionPerformed

    private void btnRetirarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarseActionPerformed
        new frmPrincipal().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRetirarseActionPerformed

    private void dibujarCasillas(int num) {
        int totalCasillas = (num * 4) - 4;
        listaCasillas = new ArrayList<>();
        int arrayI = 0;
        
        int centro = pnlTablero.getWidth() / 2;
        int tamCasilla = pnlTablero.getWidth() / num;
        
        int fornum = num / 2;
        
        for (int i = 0; i < fornum; i++) {
            int x = centro - tamCasilla;
            int y = x - (i * tamCasilla);
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == fornum - 2) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum; i++) {
            int x = centro;
            int y = (centro - fornum * tamCasilla) + i * tamCasilla;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == 1) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            if (i == fornum - 2) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.yellow);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum - 1; i++) {
            int x = centro + tamCasilla + i * tamCasilla;
            int y = centro - tamCasilla;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == fornum - 3) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum; i++) {
            int x = (centro - tamCasilla + fornum * tamCasilla) - i * tamCasilla;
            int y = centro;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == 1) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            if (i == fornum - 2) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.yellow);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum - 1; i++) {
            int x = centro;
            int y = (centro + tamCasilla) + i * tamCasilla;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == fornum - 3) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum; i++) {
            int x = centro - tamCasilla;
            int y = (centro - tamCasilla + fornum * tamCasilla) - i * tamCasilla;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == 1) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            if (i == fornum - 2) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.yellow);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum - 1; i++) {
            int x = (centro - tamCasilla * 2) - i * tamCasilla;
            int y = centro;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == fornum - 3) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
        
        for (int i = 0; i < fornum - 1; i++) {
            int x = (centro - fornum * tamCasilla) + i * tamCasilla;
            int y = centro - tamCasilla;
            listaCasillas.add(casilla(x, y, tamCasilla, listaCasillas.size() + ""));
            if (i == 1) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.blue);
            if (i == fornum - 2) listaCasillas.get(listaCasillas.size() - 1).setBackground(Color.yellow);
            pnlTablero.add(listaCasillas.get(listaCasillas.size() - 1));
        }
    }

    private JLabel casilla(int x, int y, int tam, String texto) {
        JLabel l = new JLabel(texto);
        l.setOpaque(true);
        l.setBackground(Color.white);
        l.setBounds(x, y, tam, tam);
        l.setBorder(BorderFactory.createLineBorder(Color.black, 3));
        l.setHorizontalAlignment(JLabel.CENTER);
        return l;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTablero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRetirarse;
    private javax.swing.JButton btnTirar;
    private javax.swing.JLabel lblTirada;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlTablero;
    // End of variables declaration//GEN-END:variables
}
